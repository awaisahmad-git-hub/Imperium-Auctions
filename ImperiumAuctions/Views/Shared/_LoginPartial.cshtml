@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    var user = await UserManager.GetUserAsync(User) as ApplicationUser;
    var customName = user?.Name;
}
    <ul class="navbar-nav flex-row gap-4">
        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item">
            <a asp-area="User" asp-controller="AuctionOrder" asp-action="MyOrders" id="myOrder" class="nav-link text-white header-footer-link-hover" style="cursor:pointer">My Orders</a>
            </li>
            <li class="nav-item">
            <a id="manage" class="nav-link text-white header-footer-link-hover" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @customName!</a>
            </li>
            <li class="nav-item">
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn  border-0 shadow-none text-white header-footer-link-hover">Logout</button>
                </form>
            </li>
        }
        else
        {
            <li class="nav-item">
            <a class="nav-link text-white header-footer-link-hover @IsActive("/Account/Register")" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
            </li>
            <li class="nav-item">
            <a class="nav-link text-white header-footer-link-hover @IsActive("/Account/Login")" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
            </li>
        }
    </ul>
@functions {
    public string IsActive(string page)
    {
        var currentPage = ViewContext.RouteData.Values["page"]?.ToString();
        return (page == currentPage) ? "active" : "";
    }
}