@model IEnumerable<Product>

@{
    var now = DateTime.UtcNow.ToLocalTime();
    var liveAuctions = Model.Where(i => i.CountDownTarget?.StartTargetDate <= now && i.CountDownTarget.EndTargetDate >= now).OrderBy(i => i.CountDownTarget?.EndTargetDate);
    var upComingAuctions = Model.Where(i => i.CountDownTarget?.StartTargetDate >= now || i.CountDownTarget is null)
                            .OrderBy(i => i.CountDownTarget is null ? DateTime.MaxValue : i.CountDownTarget.StartTargetDate);
    var completedAuctions = Model.Where(i => i.CountDownTarget?.EndTargetDate <= now).OrderByDescending(i => i.CountDownTarget?.EndTargetDate);
    Dictionary<string, IEnumerable<Product>> allAuctions = new()
	{
		{ "Live Auctions", liveAuctions },
		{ "Upcoming Auctions", upComingAuctions },
		{ "Completed Auctions", completedAuctions }
	};
}

@foreach(var list in allAuctions){
    if (list.Value.Any())
    {
        <h1>@list.Key</h1>
    }
foreach (var item in list.Value)
{
    <div class="col-sm-6 col-md-3 p-4">
        <div class="row">
            <a asp-controller="Home" asp-action="ProductBid" asp-route-id="@item.Id" class="text-decoration-none">
                <div class="card shadow-lg  bg-transparent clickable-card border-dark-subtle rounded px-0" style="height:350px">
                    @if (item.ProductImageList != null && item.ProductImageList.Any())
                    {
                        <img src="@item.ProductImageList.FirstOrDefault()?.ImageURL" class="card-img-top rounded bg-white" style="height:200px;object-fit:contain" />
                    }
                    else
                    {
                        <img src="https://placehold.co/300x200" class="card-img-top rounded bg-white" style="height:200px;object-fit:contain" />
                    }
                    <div class="card-body d-flex flex-column justify-content-center">
                        <div class="text-dark text-center text-ellipsis text-uppercase ">
                            @item.Title
                        </div>
                        <div class="text-dark text-center text-ellipsis">
                            @item.Description
                        </div>
                        <div class="text-dark text-center text-ellipsis">
                            <span class="text-success">Start:</span> @(item.CountDownTarget is not null ?
                        item.CountDownTarget.StartTargetDate.ToString("MMM dd, yyyy h:mm tt") + " PKT" : "comming soon")
                        </div>
                        @if (item.CountDownTarget is not null)
                        {
                            <div class="text-dark text-center text-ellipsis">
                                <span class="text-success">End:</span> @(item.CountDownTarget?.EndTargetDate.ToString("MMM dd, yyyy h:mm tt") + " PKT")
                            </div>
                        }
                        <div class="text-dark text-center text-nowrap text-ellipsis">
                            <span class="text-success">Starting Price:</span> @item.StartingPrice.ToString("Rs #,##0", new CultureInfo("ur-PK"))
                        </div>
                    </div>
                </div>
            </a>
        </div>
    </div>
}
}
@if (!Model.Any())
{
    <div class="text-center fs-4">
        0 Search Results
    </div>
}